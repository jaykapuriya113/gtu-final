{"ast":null,"code":"var _jsxFileName = \"/home/dev/gtu/mern-amazona/frontend/src/screens/ResetPasswordScreen.js\",\n  _s = $RefreshSig$();\nimport Axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPasswordScreen() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  useEffect(() => {\n    if (userInfo || !token) {\n      navigate('/');\n    }\n  }, [navigate, userInfo, token]);\n  const submitHandler = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error('Passwords do not match');\n      return;\n    }\n    try {\n      await Axios.post('/api/users/reset-password', {\n        password,\n        token\n      });\n      navigate('/signin');\n      toast.success('Password updated successfully');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordScreen, \"v6eRK9geyJg21ZucMC7uEDklb44=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ResetPasswordScreen;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordScreen\");","map":{"version":3,"names":["Axios","useContext","useEffect","useState","Container","Button","Form","Helmet","useNavigate","useParams","toast","Store","getError","jsxDEV","_jsxDEV","ResetPasswordScreen","_s","navigate","token","password","setPassword","confirmPassword","setConfirmPassword","state","userInfo","submitHandler","e","preventDefault","error","post","success","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","required","onChange","target","value","_c","$RefreshReg$"],"sources":["/home/dev/gtu/mern-amazona/frontend/src/screens/ResetPasswordScreen.js"],"sourcesContent":["import Axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\n\nexport default function ResetPasswordScreen() {\n  const navigate = useNavigate();\n  const { token } = useParams();\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n\n  useEffect(() => {\n    if (userInfo || !token) {\n      navigate('/');\n    }\n  }, [navigate, userInfo, token]);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error('Passwords do not match');\n      return;\n    }\n    try {\n      await Axios.post('/api/users/reset-password', {\n        password,\n        token,\n      });\n      navigate('/signin');\n      toast.success('Password updated successfully');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <Container className=\"small-container\">\n      <Helmet>\n        <title>Reset Password</title>\n      </Helmet>\n      <h1 className=\"my-3\">Reset Password</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            required\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n          <Form.Label>Confirm New Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n        </Form.Group>\n\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Reset Password</Button>\n        </div>\n      </Form>\n    </Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}